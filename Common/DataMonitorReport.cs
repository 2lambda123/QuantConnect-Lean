/*
 * QUANTCONNECT.COM - Democratizing Finance, Empowering Individuals.
 * Lean Algorithmic Trading Engine v2.0. Copyright 2014 QuantConnect Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

using System.Collections.Generic;
using QuantConnect.Interfaces;

namespace QuantConnect
{
    /// <summary>
    /// Report generated by the <see cref="IDataMonitor"/> class that contains information about missing data
    /// </summary>
    public class DataMonitorReport
    {
        private readonly ISet<string> _fetchedData;
        private readonly ISet<string> _missingData;

        /// <summary>
        /// Gets the number of data files that were fetched
        /// </summary>
        public int MissingDataCount
        {
            get
            {
                return _missingData.Count;
            }
        }

        /// <summary>
        /// Fets the percentage of data requests that could not be satisfied
        /// </summary>
        public double MissingDataPercentage
        {
            get
            {
                var requestsCount = _fetchedData.Count + _missingData.Count;

                if (requestsCount == 0)
                {
                    return 0;
                }

                return _missingData.Count / (double)requestsCount * 100;
            }
        }

        /// <summary>
        /// Rates at which data requests were made per second
        /// </summary>
        public IEnumerable<double> DataRequestRates { get; }

        /// <summary>
        /// Initializes a new instance of the <see cref="DataMonitorReport"/> class
        /// </summary>
        /// <param name="fetchedData">List of data paths that were requested and successfuly served</param>
        /// <param name="missingData">List of data paths that were requested but could not be served</param>
        /// <param name="dataRequestRates">Rates at which data requests were made per second</param>
        public DataMonitorReport(
            ISet<string> fetchedData,
            ISet<string> missingData,
            IEnumerable<double> dataRequestRates)
        {
            _fetchedData = fetchedData;
            _missingData = missingData;
            DataRequestRates = dataRequestRates;
        }
    }
}
