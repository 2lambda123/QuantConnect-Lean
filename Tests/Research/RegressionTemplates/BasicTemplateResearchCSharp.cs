/*
 * QUANTCONNECT.COM - Democratizing Finance, Empowering Individuals.
 * Lean Algorithmic Trading Engine v2.0. Copyright 2014 QuantConnect Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

using QuantConnect.Interfaces;

namespace QuantConnect.Tests.Research.RegressionTemplates
{
    public class BasicTemplateResearchCSharp : IRegressionResearchDefinition
    {
        /// <remarks>Requires to be implemented last in the file <see cref="ResearchRegressionTests.UpdateResearchRegressionOutputInSourceFile"/>
        /// get should start from next line</remarks>
        public string ExpectedOutput =>
            "{\r\n \"cells\": [\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"id\": \"dc40725e\",\r\n   \"metadata\": {\r\n    \"papermill\": {\r\n     \"duration\": 0.003001,\r\n     \"end_time\": \"2022-03-01T19:21:42.185675\",\r\n     \"exception\": false,\r\n     \"start_time\": \"2022-03-01T19:21:42.182674\",\r\n     \"status\": \"completed\"\r\n    },\r\n    \"tags\": []\r\n   },\r\n   \"source\": [\r\n    \"![QuantConnect Logo](https://cdn.quantconnect.com/web/i/qc_notebook_logo_rev0.png)\\n\",\r\n    \"## Welcome to The QuantConnect Research Page\\n\",\r\n    \"#### Refer to this page for documentation https://www.quantconnect.com/docs/research/overview#\\n\",\r\n    \"#### Contribute to this template file https://github.com/QuantConnect/Lean/blob/master/Research/BasicQuantBookTemplate.ipynb\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"id\": \"36be5971\",\r\n   \"metadata\": {\r\n    \"papermill\": {\r\n     \"duration\": 0.003,\r\n     \"end_time\": \"2022-03-01T19:21:42.191666\",\r\n     \"exception\": false,\r\n     \"start_time\": \"2022-03-01T19:21:42.188666\",\r\n     \"status\": \"completed\"\r\n    },\r\n    \"tags\": []\r\n   },\r\n   \"source\": [\r\n    \"## QuantBook Basics\\n\",\r\n    \"\\n\",\r\n    \"### Start QuantBook\\n\",\r\n    \"- Add the references and imports\\n\",\r\n    \"- Create a QuantBook instance\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 1,\r\n   \"id\": \"6f451a30\",\r\n   \"metadata\": {\r\n    \"execution\": {\r\n     \"iopub.execute_input\": \"2022-03-01T19:21:42.206496Z\",\r\n     \"iopub.status.busy\": \"2022-03-01T19:21:42.199504Z\",\r\n     \"iopub.status.idle\": \"2022-03-01T19:21:43.675006Z\",\r\n     \"shell.execute_reply\": \"2022-03-01T19:21:43.671061Z\"\r\n    },\r\n    \"papermill\": {\r\n     \"duration\": 1.480502,\r\n     \"end_time\": \"2022-03-01T19:21:43.675006\",\r\n     \"exception\": false,\r\n     \"start_time\": \"2022-03-01T19:21:42.194504\",\r\n     \"status\": \"completed\"\r\n    },\r\n    \"tags\": []\r\n   },\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/html\": [\r\n       \"\r\\n\",\r\n       \"<div>\r\\n\",\r\n       \"    <div id='dotnet-interactive-this-cell-19576.Microsoft.DotNet.Interactive.Http.HttpPort' style='display: none'>\r\\n\",\r\n       \"        The below script needs to be able to find the current output cell; this is an easy method to get it.\r\\n\",\r\n       \"    </div>\r\\n\",\r\n       \"    <script type='text/javascript'>\r\\n\",\r\n       \"async function probeAddresses(probingAddresses) {\r\\n\",\r\n       \"    function timeout(ms, promise) {\r\\n\",\r\n       \"        return new Promise(function (resolve, reject) {\r\\n\",\r\n       \"            setTimeout(function () {\r\\n\",\r\n       \"                reject(new Error('timeout'))\r\\n\",\r\n       \"            }, ms)\r\\n\",\r\n       \"            promise.then(resolve, reject)\r\\n\",\r\n       \"        })\r\\n\",\r\n       \"    }\r\\n\",\r\n       \"\r\\n\",\r\n       \"    if (Array.isArray(probingAddresses)) {\r\\n\",\r\n       \"        for (let i = 0; i < probingAddresses.length; i++) {\r\\n\",\r\n       \"\r\\n\",\r\n       \"            let rootUrl = probingAddresses[i];\r\\n\",\r\n       \"\r\\n\",\r\n       \"            if (!rootUrl.endsWith('/')) {\r\\n\",\r\n       \"                rootUrl = `${rootUrl}/`;\r\\n\",\r\n       \"            }\r\\n\",\r\n       \"\r\\n\",\r\n       \"            try {\r\\n\",\r\n       \"                let response = await timeout(1000, fetch(`${rootUrl}discovery`, {\r\\n\",\r\n       \"                    method: 'POST',\r\\n\",\r\n       \"                    cache: 'no-cache',\r\\n\",\r\n       \"                    mode: 'cors',\r\\n\",\r\n       \"                    timeout: 1000,\r\\n\",\r\n       \"                    headers: {\r\\n\",\r\n       \"                        'Content-Type': 'text/plain'\r\\n\",\r\n       \"                    },\r\\n\",\r\n       \"                    body: probingAddresses[i]\r\\n\",\r\n       \"                }));\r\\n\",\r\n       \"\r\\n\",\r\n       \"                if (response.status == 200) {\r\\n\",\r\n       \"                    return rootUrl;\r\\n\",\r\n       \"                }\r\\n\",\r\n       \"            }\r\\n\",\r\n       \"            catch (e) { }\r\\n\",\r\n       \"        }\r\\n\",\r\n       \"    }\r\\n\",\r\n       \"}\r\\n\",\r\n       \"\r\\n\",\r\n       \"function loadDotnetInteractiveApi() {\r\\n\",\r\n       \"    probeAddresses([\\\"http://192.168.29.151:1001/\\\", \\\"http://127.0.0.1:1001/\\\"])\r\\n\",\r\n       \"        .then((root) => {\r\\n\",\r\n       \"        // use probing to find host url and api resources\r\\n\",\r\n       \"        // load interactive helpers and language services\r\\n\",\r\n       \"        let dotnetInteractiveRequire = require.config({\r\\n\",\r\n       \"        context: '19576.Microsoft.DotNet.Interactive.Http.HttpPort',\r\\n\",\r\n       \"                paths:\r\\n\",\r\n       \"            {\r\\n\",\r\n       \"                'dotnet-interactive': `${root}resources`\r\\n\",\r\n       \"                }\r\\n\",\r\n       \"        }) || require;\r\\n\",\r\n       \"\r\\n\",\r\n       \"            window.dotnetInteractiveRequire = dotnetInteractiveRequire;\r\\n\",\r\n       \"\r\\n\",\r\n       \"            window.configureRequireFromExtension = function(extensionName, extensionCacheBuster) {\r\\n\",\r\n       \"                let paths = {};\r\\n\",\r\n       \"                paths[extensionName] = `${root}extensions/${extensionName}/resources/`;\r\\n\",\r\n       \"                \r\\n\",\r\n       \"                let internalRequire = require.config({\r\\n\",\r\n       \"                    context: extensionCacheBuster,\r\\n\",\r\n       \"                    paths: paths,\r\\n\",\r\n       \"                    urlArgs: `cacheBuster=${extensionCacheBuster}`\r\\n\",\r\n       \"                    }) || require;\r\\n\",\r\n       \"\r\\n\",\r\n       \"                return internalRequire\r\\n\",\r\n       \"            };\r\\n\",\r\n       \"        \r\\n\",\r\n       \"            dotnetInteractiveRequire([\r\\n\",\r\n       \"                    'dotnet-interactive/dotnet-interactive'\r\\n\",\r\n       \"                ],\r\\n\",\r\n       \"                function (dotnet) {\r\\n\",\r\n       \"                    dotnet.init(window);\r\\n\",\r\n       \"                },\r\\n\",\r\n       \"                function (error) {\r\\n\",\r\n       \"                    console.log(error);\r\\n\",\r\n       \"                }\r\\n\",\r\n       \"            );\r\\n\",\r\n       \"        })\r\\n\",\r\n       \"        .catch(error => {console.log(error);});\r\\n\",\r\n       \"    }\r\\n\",\r\n       \"\r\\n\",\r\n       \"// ensure `require` is available globally\r\\n\",\r\n       \"if ((typeof(require) !==  typeof(Function)) || (typeof(require.config) !== typeof(Function))) {\r\\n\",\r\n       \"    let require_script = document.createElement('script');\r\\n\",\r\n       \"    require_script.setAttribute('src', 'https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js');\r\\n\",\r\n       \"    require_script.setAttribute('type', 'text/javascript');\r\\n\",\r\n       \"    \r\\n\",\r\n       \"    \r\\n\",\r\n       \"    require_script.onload = function() {\r\\n\",\r\n       \"        loadDotnetInteractiveApi();\r\\n\",\r\n       \"    };\r\\n\",\r\n       \"\r\\n\",\r\n       \"    document.getElementsByTagName('head')[0].appendChild(require_script);\r\\n\",\r\n       \"}\r\\n\",\r\n       \"else {\r\\n\",\r\n       \"    loadDotnetInteractiveApi();\r\\n\",\r\n       \"}\r\\n\",\r\n       \"\r\\n\",\r\n       \"    </script>\r\\n\",\r\n       \"</div>\"\r\n      ]\r\n     },\r\n     \"metadata\": {},\r\n     \"output_type\": \"display_data\"\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Initialize.csx: Loading assemblies from D:\\\\quantconnect\\\\Lean\\\\Tests\\\\bin\\\\Debug\r\\n\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"// QuantBook C# Research Environment\\n\",\r\n    \"// For more information see https://www.quantconnect.com/docs/research/overview\\n\",\r\n    \"#load \\\"./Initialize.csx\\\"\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 2,\r\n   \"id\": \"b8e3845f\",\r\n   \"metadata\": {\r\n    \"execution\": {\r\n     \"iopub.execute_input\": \"2022-03-01T19:21:43.685998Z\",\r\n     \"iopub.status.busy\": \"2022-03-01T19:21:43.685042Z\",\r\n     \"iopub.status.idle\": \"2022-03-01T19:21:43.799627Z\",\r\n     \"shell.execute_reply\": \"2022-03-01T19:21:43.799627Z\"\r\n    },\r\n    \"papermill\": {\r\n     \"duration\": 0.117624,\r\n     \"end_time\": \"2022-03-01T19:21:43.799627\",\r\n     \"exception\": false,\r\n     \"start_time\": \"2022-03-01T19:21:43.682003\",\r\n     \"status\": \"completed\"\r\n    },\r\n    \"tags\": []\r\n   },\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.757 TRACE:: Config.GetValue(): debug-mode - Using default value: False\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.757 TRACE:: Config.Get(): Configuration key not found. Key: results-destination-folder - Using default value: \r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.758 TRACE:: Config.Get(): Configuration key not found. Key: plugin-directory - Using default value: \r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.759 TRACE:: Config.Get(): Configuration key not found. Key: composer-dll-directory - Using default value: \r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.759 TRACE:: Composer(): Loading Assemblies from D:\\\\quantconnect\\\\Lean\\\\Tests\\\\bin\\\\Debug\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.781 TRACE:: Config.Get(): Configuration key not found. Key: data-directory - Using default value: ../../../Data/\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.782 TRACE:: Config.Get(): Configuration key not found. Key: version-id - Using default value: \r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.782 TRACE:: Config.Get(): Configuration key not found. Key: cache-location - Using default value: ../../../Data/\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.782 TRACE:: Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE v2.5.0.0 Mode: DEBUG (64bit) Host: P3561-70DPBL3\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.785 TRACE:: Engine.Main(): Started 12:51 AM\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.786 TRACE:: Config.Get(): Configuration key not found. Key: lean-manager-type - Using default value: LocalLeanManager\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.792 TRACE:: Config.Get(): Configuration key not found. Key: data-permission-manager - Using default value: DataPermissionManager\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.793 TRACE:: Config.Get(): Configuration key not found. Key: results-destination-folder - Using default value: D:\\\\quantconnect\\\\Lean\\\\Tests\\\\bin\\\\Debug\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"20220301 19:21:43.797 TRACE:: Config.Get(): Configuration key not found. Key: object-store-root - Using default value: ./storage\r\\n\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"#load \\\"./QuantConnect.csx\\\"\\n\",\r\n    \"\\n\",\r\n    \"using QuantConnect;\\n\",\r\n    \"using QuantConnect.Data;\\n\",\r\n    \"using QuantConnect.Algorithm;\\n\",\r\n    \"using QuantConnect.Research;\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 3,\r\n   \"id\": \"e06de3d1\",\r\n   \"metadata\": {\r\n    \"execution\": {\r\n     \"iopub.execute_input\": \"2022-03-01T19:21:43.817617Z\",\r\n     \"iopub.status.busy\": \"2022-03-01T19:21:43.817617Z\",\r\n     \"iopub.status.idle\": \"2022-03-01T19:21:45.404264Z\",\r\n     \"shell.execute_reply\": \"2022-03-01T19:21:45.404264Z\"\r\n    },\r\n    \"papermill\": {\r\n     \"duration\": 1.595626,\r\n     \"end_time\": \"2022-03-01T19:21:45.405250\",\r\n     \"exception\": false,\r\n     \"start_time\": \"2022-03-01T19:21:43.809624\",\r\n     \"status\": \"completed\"\r\n    },\r\n    \"tags\": []\r\n   },\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"PythonEngine.Initialize(): Runtime.Initialize()...\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Runtime.Initialize(): Py_Initialize...\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Runtime.Initialize(): PyEval_InitThreads...\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Runtime.Initialize(): Initialize types...\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Runtime.Initialize(): Initialize types end.\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Runtime.Initialize(): AssemblyManager.Initialize()...\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Runtime.Initialize(): AssemblyManager.UpdatePath()...\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"PythonEngine.Initialize(): GetCLRModule()...\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"PythonEngine.Initialize(): clr GetManifestResourceStream...\r\\n\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"var qb = new QuantBook();\\n\",\r\n    \"var spy = qb.AddEquity(\\\"SPY\\\");\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 4,\r\n   \"id\": \"1acb1e10\",\r\n   \"metadata\": {\r\n    \"execution\": {\r\n     \"iopub.execute_input\": \"2022-03-01T19:21:45.419280Z\",\r\n     \"iopub.status.busy\": \"2022-03-01T19:21:45.418273Z\",\r\n     \"iopub.status.idle\": \"2022-03-01T19:21:45.466672Z\",\r\n     \"shell.execute_reply\": \"2022-03-01T19:21:45.466672Z\"\r\n    },\r\n    \"papermill\": {\r\n     \"duration\": 0.054478,\r\n     \"end_time\": \"2022-03-01T19:21:45.466672\",\r\n     \"exception\": false,\r\n     \"start_time\": \"2022-03-01T19:21:45.412194\",\r\n     \"status\": \"completed\"\r\n    },\r\n    \"tags\": []\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"var startDate = new DateTime(2021,1,1);\\n\",\r\n    \"var endDate = new DateTime(2021,12,31);\\n\",\r\n    \"var history = qb.History(qb.Securities.Keys, startDate, endDate, Resolution.Daily);\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 5,\r\n   \"id\": \"539ca386\",\r\n   \"metadata\": {\r\n    \"execution\": {\r\n     \"iopub.execute_input\": \"2022-03-01T19:21:45.481676Z\",\r\n     \"iopub.status.busy\": \"2022-03-01T19:21:45.481676Z\",\r\n     \"iopub.status.idle\": \"2022-03-01T19:21:45.654111Z\",\r\n     \"shell.execute_reply\": \"2022-03-01T19:21:45.654111Z\"\r\n    },\r\n    \"papermill\": {\r\n     \"duration\": 0.181445,\r\n     \"end_time\": \"2022-03-01T19:21:45.655110\",\r\n     \"exception\": false,\r\n     \"start_time\": \"2022-03-01T19:21:45.473665\",\r\n     \"status\": \"completed\"\r\n    },\r\n    \"tags\": []\r\n   },\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"SPY: O: 374.075 H: 374.2245 L: 363.6392 C: 367.5863 V: 94685703\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"SPY: O: 366.8487 H: 371.2642 L: 366.8487 C: 370.118 V: 54790079\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"SPY: O: 368.4634 H: 375.7495 L: 367.9152 C: 372.3307 V: 93254510\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"SPY: O: 374.9521 H: 378.65 L: 374.693 C: 377.8626 V: 62474792\r\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"SPY: O: 379.3876 H: 380.2448 L: 375.8791 C: 380.0156 V: 63370827\r\\n\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"foreach(var slice in history.Take(5)) {\\n\",\r\n    \"    Console.WriteLine(slice.Bars[spy.Symbol].ToString());\\n\",\r\n    \"}\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"id\": \"e8082b2c\",\r\n   \"metadata\": {\r\n    \"papermill\": {\r\n     \"duration\": 0.01005,\r\n     \"end_time\": \"2022-03-01T19:21:45.672644\",\r\n     \"exception\": false,\r\n     \"start_time\": \"2022-03-01T19:21:45.662594\",\r\n     \"status\": \"completed\"\r\n    },\r\n    \"tags\": []\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": []\r\n  }\r\n ],\r\n \"metadata\": {\r\n  \"kernelspec\": {\r\n   \"display_name\": \".NET (C#)\",\r\n   \"language\": \"C#\",\r\n   \"name\": \".net-csharp\"\r\n  },\r\n  \"language_info\": {\r\n   \"file_extension\": \".cs\",\r\n   \"mimetype\": \"text/x-csharp\",\r\n   \"name\": \"C#\",\r\n   \"pygments_lexer\": \"csharp\",\r\n   \"version\": \"9.0\"\r\n  },\r\n  \"papermill\": {\r\n   \"default_parameters\": {},\r\n   \"duration\": 7.612248,\r\n   \"end_time\": \"2022-03-01T19:21:48.304996\",\r\n   \"environment_variables\": {},\r\n   \"exception\": null,\r\n   \"input_path\": \"D:\\\\quantconnect\\\\Lean\\\\Tests\\\\bin\\\\Debug\\\\BasicTemplateResearchCSharp.ipynb\",\r\n   \"output_path\": \"D:\\\\quantconnect\\\\Lean\\\\Tests\\\\bin\\\\Debug\\\\BasicTemplateResearchCSharp-output.ipynb\",\r\n   \"parameters\": {},\r\n   \"start_time\": \"2022-03-01T19:21:40.692748\",\r\n   \"version\": \"2.3.4\"\r\n  }\r\n },\r\n \"nbformat\": 4,\r\n \"nbformat_minor\": 5\r\n}";
    }
}
